import{c as s,o as c,f as l,p as _,d as i,m as o,k as n,b as d}from"./vendor.e6b44e87.js";import{_ as u,a as h}from"./index.c01f7087.js";const m={},f={class:"col-container"},p=s("div",{class:"col-xs-12"}," Inner-Slot ",-1),v={class:"col-xs-12"};function x(e,t){return c(),l("div",f,[p,s("div",v,[_(e.$slots,"default")])])}var $=u(m,[["render",x]]);const b={class:"col-container"},S=s("div",{class:"col-xs-12"}," OuterSlot ",-1),g={class:"col-xs-12"},k=i({setup(e){return(t,r)=>(c(),l("div",b,[S,s("div",g,[o($,null,{default:n(()=>[_(t.$slots,"default")]),_:3})])]))}}),w={class:"col-container"},B={class:"col-xs-12"},C=s("img",{src:h},null,-1),E={class:"col-xs-12"},I=s("div",null," Hierbei wird mit Nested-Slots gearbeitet. D.h. ein Element wird durch mehrere Elemente durchgereiht. ",-1),N=s("div",null," In diesem Fall vom <slot-outer> in den <slot-inner>. ",-1),F=i({setup(e){return(t,r)=>{const a=d("base-info");return c(),l("div",w,[s("div",B,[o(k,null,{default:n(()=>[C]),_:1})]),s("div",E,[o(a,null,{default:n(()=>[I,N]),_:1})])])}}});export{F as default};
