import{c as e,d as c,b as d,e as u,o as _,f as p,w as t,g as n,ag as v,t as h,m as g,k as m}from"./vendor.e6b44e87.js";import{u as x,L as f}from"./index.c01f7087.js";const D={class:"col-container"},k={class:"col-xs-12","data-caption":"Sprache"},C=e("option",{value:"de"},"Deutsch",-1),b=e("option",{value:"en"},"Englisch",-1),w=[C,b],z={class:"col-xs-12","data-caption":"\xDCbersetzung mit Directive + Target als Array"},S={class:"col-xs-12","data-caption":"\xDCbersetzung mit Directive + Target als String"},y={class:"col-xs-12","data-caption":"\xDCbersetzung mit Interpolation"},V={class:"col-xs-12"},B=e("div",null," Das aktualisieren der Directiven wird mit einem kleinen Hack gemacht. In der App.vue ist bei .app__container ein :key mit der Culture definiert. Dadurch, dass sich der Wert \xE4ndert, wird ein Rerendering ausgel\xF6st. ",-1),E=e("div",null," Weiters zeigt es die Verwendung von Methoden, die in den globalProperties zur Verf\xFCgung gestellt werden. ",-1),L=c({setup(A){const s=x(f);return(a,i)=>{const l=d("base-info"),o=u("tr");return _(),p("div",D,[e("div",k,[t(e("select",{"onUpdate:modelValue":i[0]||(i[0]=r=>n(s).culture=r)},w,512),[[v,n(s).culture]])]),e("div",z,[t(e("div",null,null,512),[[o,{target:["html","title"],key:"hello"}]])]),e("div",S,[t(e("div",null,null,512),[[o,{target:"html,title",key:"hello"}]])]),e("div",y,h(a.$tr("hello")),1),e("div",V,[g(l,null,{default:m(()=>[B,E]),_:1})])])}}});export{L as default};
